[{"path":"https://maxcovr.njtierney.com/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://maxcovr.njtierney.com/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://maxcovr.njtierney.com/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to maxcovr","title":"Contributing to maxcovr","text":"outlines propose change maxcovr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://maxcovr.njtierney.com/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to maxcovr","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://maxcovr.njtierney.com/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to maxcovr","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://maxcovr.njtierney.com/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to maxcovr","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://maxcovr.njtierney.com/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to maxcovr","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://maxcovr.njtierney.com/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2017 Nicholas Tierney  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. maxcovr Copyright (C) 2017 Nicholas Tierney This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://maxcovr.njtierney.com/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with maxcovr","title":"Getting help with maxcovr","text":"Thanks using maxcovr. filing issue, places explore pieces put together make process smooth possible. Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. right place, need file issue, please review “File issues” paragraph tidyverse contributing guidelines. Thanks help!","code":""},{"path":"https://maxcovr.njtierney.com/articles/cross_validation_with_maxcovr.html","id":"performing-cross-validation-on-max_coverage","dir":"Articles","previous_headings":"","what":"Performing cross validation on max_coverage","title":"Using Cross Validation with maxcovr","text":"stick previous example using york york_crime Thanks modelr package, relatively straightforward perform cross validation. creates dataframe test training sets fit model training set using map_df, purrr package. can use summary_mc_cv function extract summaries fold. summary takes facilities placed using training set users, takes test set users counts percent covered training model. Eyeballing values, looks like pct coverage stays around 10%, can plot get better idea. can overlay coverage obtained using full dataset get idea performing.  see pct_coverage doesn’t seem change much across folds. Coming next, explore perform cross validation increase number facilities added. Ideally, way using purrr, don’t fic 5 separate models, perhaps change enable n_added take vector values. looks like facilities add, better coverage…mostly.  Let’s look another way, boxplots number facilities added.  can also compare % coverage test training datasets","code":"library(maxcovr) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union # subset to be the places with towers built on them. york_selected <- york %>% filter(grade == \"I\")  york_unselected <- york %>% filter(grade != \"I\") # first we partition the data into 5 folds library(modelr) library(purrr) library(tibble) mc_cv <- modelr::crossv_kfold(york_crime, 5) %>%      # we change the test and train sets from the `resample`     # to tibbles     mutate(test = map(test,as_tibble),            train = map(train,as_tibble)) mc_cv ## # A tibble: 5 × 3 ##   train                 test                .id   ##   <named list>          <named list>        <chr> ## 1 <tibble [1,451 × 12]> <tibble [363 × 12]> 1     ## 2 <tibble [1,451 × 12]> <tibble [363 × 12]> 2     ## 3 <tibble [1,451 × 12]> <tibble [363 × 12]> 3     ## 4 <tibble [1,451 × 12]> <tibble [363 × 12]> 4     ## 5 <tibble [1,452 × 12]> <tibble [362 × 12]> 5 library(purrr) # then we fit the model system.time(     mc_cv_fit <- map_df(mc_cv$train,                      ~max_coverage(existing_facility = york_selected,                                    proposed_facility = york_unselected,                                    user = ., # training set goes here                                    n_added = 20,                                    distance_cutoff = 100)) ) ##    user  system elapsed  ##   2.721   0.035   2.756 summarised_cv <- summary_mc_cv(mc_cv_fit, mc_cv)  summarised_cv %>% knitr::kable() library(ggplot2) summarised_cv %>%     ggplot(aes(x = n_fold,                y = pct_cov)) +      geom_point() +     geom_line(group = 1) +      theme_minimal() # then we fit the model system.time(     mc_cv_fit_n20 <- map_df(mc_cv$train,                      ~max_coverage(existing_facility = york_selected,                                    proposed_facility = york_unselected,                                    user = ., # training set goes here                                    n_added = 20,                                    distance_cutoff = 100)) ) ##    user  system elapsed  ##   2.365   0.024   2.389 system.time(     mc_cv_fit_n40 <- map_df(mc_cv$train,                      ~max_coverage(existing_facility = york_selected,                                    proposed_facility = york_unselected,                                    user = ., # training set goes here                                    n_added = 40,                                    distance_cutoff = 100)) ) ##    user  system elapsed  ##   2.324   0.004   2.328 system.time(     mc_cv_fit_n60 <- map_df(mc_cv$train,                      ~max_coverage(existing_facility = york_selected,                                    proposed_facility = york_unselected,                                    user = ., # training set goes here                                    n_added = 60,                                    distance_cutoff = 100)) ) ##    user  system elapsed  ##   2.433   0.004   2.437 system.time(     mc_cv_fit_n80 <- map_df(mc_cv$train,                      ~max_coverage(existing_facility = york_selected,                                    proposed_facility = york_unselected,                                    user = ., # training set goes here                                    n_added = 80,                                    distance_cutoff = 100)) ) ##    user  system elapsed  ##   2.460   0.008   2.468 system.time(     mc_cv_fit_n100 <- map_df(mc_cv$train,                      ~max_coverage(existing_facility = york_selected,                                    proposed_facility = york_unselected,                                    user = ., # training set goes here                                    n_added = 100,                                    distance_cutoff = 100)) ) ##    user  system elapsed  ##  13.356   0.028  13.384 summarised_cv_n20 <- summary_mc_cv(mc_cv_fit_n20, mc_cv) summarised_cv_n40 <- summary_mc_cv(mc_cv_fit_n40, mc_cv) summarised_cv_n60 <- summary_mc_cv(mc_cv_fit_n60, mc_cv) summarised_cv_n80 <- summary_mc_cv(mc_cv_fit_n80, mc_cv) summarised_cv_n100 <- summary_mc_cv(mc_cv_fit_n100, mc_cv)  bound_testing_summaries <- bind_rows(summarised_cv_n20,                                      summarised_cv_n40,                                      summarised_cv_n60,                                      summarised_cv_n80,                                      summarised_cv_n100) %>%     mutate(type = \"test\") bound_training_summaries <- bind_rows(mc_cv_fit_n20$model_coverage,                                       mc_cv_fit_n40$model_coverage,                                       mc_cv_fit_n60$model_coverage,                                       mc_cv_fit_n80$model_coverage,                                       mc_cv_fit_n100$model_coverage) %>%     mutate(type = \"training\")  bound_all_summaries <- bind_rows(bound_testing_summaries,                                  bound_training_summaries) ggplot(bound_testing_summaries,        aes(x = n_fold,                y = pct_cov,                colour = factor(n_added),                group = factor(n_added))) +      geom_point() +      geom_line() +      theme_minimal() ggplot(bound_testing_summaries,        aes(x = factor(n_added),            y = n_cov)) +     geom_boxplot() +      theme_minimal() bound_all_summaries %>%     ggplot(aes(x = factor(n_added),                y = pct_cov,                fill = type)) +      geom_boxplot() +      theme_minimal()"},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"the-moviation-why-maxcovr","dir":"Articles","previous_headings":"","what":"The moviation: Why maxcovr","title":"Using maxcovr","text":"maxcovr created make easy non expert correctly solve maximum covering location problem. problem beginning applied problems AED placement, applied many different areas. Many implementations papers apply commercial software AMPL, Gurobi, CPLEX. Additionally, code use paper implement optimisation provided, requested. result, analyses difficult implement, difficult reproduce. maxcovr created address shortcomings, using: R, free open source language Open source solvers, lpSolve, glpk, can used Linux, Windows, OSX. Real-world, open source example data. Tidyverse principles design humans make easy use, code, extend. means results easy implement, reproduce, extend.","code":""},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"the-problem","dir":"Articles","previous_headings":"","what":"The problem","title":"Using maxcovr","text":"Consider toy example want place crime surveillance towers detect crime. two datasets, york, york_crime: york contains listed building GPS locations city York, provided city york york_crime contains set crime data ukpolice package, containing crime data September 2016. already surveillance towers built, placed top listed buildings grade . call dataset york_existing, remaining building locations york_proposed. , york_existing currently locations facilities, york_proposed potential facility locations. interested placing surveillance towers within 100m largest number crimes. going use crime data help us choose ideal locations place towers. can illustrated following graphic, red circles indicate current coverage building locations, blue crimes within circles within coverage. Visually, coverage looks OK, get better estimate, can verify coverage using nearest() function. nearest() takes two dataframes returns nearest lat/long coords first dataframe second dataframe, along distances appropriate columns building dataframe. can think reading “nearest (nearest_df) (to_df)”. Note maxcovr records positions locations must named “lat” “long” latitude longitude, respectively. dataframe dat_dist contains nearest proposed facility crime. means dataframe contains “to_id” - ID number (labelled 1 number rows dataset), “nearest_id” describes row numer “nearest_df” corresponds row location data.frame. also rest columns york_crime. returned make easy data manipulation / exploration tasks, wish. can instead return dataframe every building rows, nearest crime building, simply changing order. evaluate coverage use coverage, specifying distance cutoff distance_cutoff 100m. contains useful summary information: distance_within - distance used determine coverae n_cov - number events covered n_not_cov - number events covered pct_cov - proportion events covered pct_not_cov - proportion events covered dist_avg - average distance rows nearest facility user dist_avg - standard deviation distance rows nearest facility user. tells us crime, 37.76% within 100m, 339 crimes covered, mean distance surveillance camera 1400m.","code":"library(maxcovr) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union # subset to be the places with towers built on them. york_existing <- york %>% filter(grade == \"I\")  york_proposed <- york %>% filter(grade != \"I\") ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively dat_dist <- nearest(nearest_df = york_proposed,                      to_df = york_crime)  head(dat_dist) ## # A tibble: 6 × 22 ##   to_id nearest_id distance category          persistent_id date  lat_to long_to ##   <dbl>      <dbl>    <dbl> <chr>             <chr>         <chr>  <dbl>   <dbl> ## 1     1       1787   18.2   anti-social-beha… 62299914865f… 2016…   54.0   -1.08 ## 2     2        794  512.    anti-social-beha… 4e34f53d247f… 2016…   54.0   -1.12 ## 3     3        350    0.993 anti-social-beha… 2a0062f3dfac… 2016…   54.0   -1.08 ## 4     4        327   20.5   anti-social-beha… eb53e09ae46a… 2016…   54.0   -1.09 ## 5     5       1860  135.    anti-social-beha… 6139f131b724… 2016…   54.0   -1.08 ## 6     6        404   22.8   anti-social-beha… d8de26d5af47… 2016…   54.0   -1.08 ## # ℹ 14 more variables: street_id <chr>, street_name <chr>, context <chr>, ## #   id <chr>, location_type <chr>, location_subtype <chr>, ## #   outcome_status <chr>, long_nearest <dbl>, lat_nearest <dbl>, ## #   object_id <int>, desig_id <chr>, pref_ref <int>, name <chr>, grade <chr> dat_dist_bldg <- nearest(york_crime,york_existing)  head(dat_dist_bldg) ## # A tibble: 6 × 22 ##   to_id nearest_id distance long_to lat_to object_id desig_id pref_ref name      ##   <dbl>      <dbl>    <dbl>   <dbl>  <dbl>     <int> <chr>       <int> <chr>     ## 1     1         33     36.0   -1.09   54.0      6144 DYO1195    463280 GUILDHAL… ## 2     2        183     35.8   -1.09   54.0      6142 DYO1373    462942 BOOTHAM … ## 3     3        503     95.3   -1.08   54.0      3463 DYO365     464845 THE NORM… ## 4     4        273     44.3   -1.08   54.0      3461 DYO583     464427 CHURCH O… ## 5     5        908     26.5   -1.08   54.0      3460 DYO916     463764 CUMBERLA… ## 6     6        495    326.    -1.13   54.0      3450 DYO1525    328614 CHURCH O… ## # ℹ 13 more variables: grade <chr>, category <chr>, persistent_id <chr>, ## #   date <chr>, lat_nearest <dbl>, long_nearest <dbl>, street_id <chr>, ## #   street_name <chr>, context <chr>, id <chr>, location_type <chr>, ## #   location_subtype <chr>, outcome_status <chr> coverage(york_proposed,           york_crime,          distance_cutoff = 100) ## # A tibble: 1 × 7 ##   distance_within n_cov n_not_cov prop_cov prop_not_cov dist_avg dist_sd ##             <dbl> <int>     <int>    <dbl>        <dbl>    <dbl>   <dbl> ## 1             100   685      1129    0.378        0.622     355.    422."},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"using-max_coverage","dir":"Articles","previous_headings":"","what":"using max_coverage","title":"Using maxcovr","text":"Knowing information, might interested improving coverage. can use max_coverage function. function takes 5 arguments: existing_facility = facilities currently installed proposed_facility = facilities proposed install user = users want maximise coverage n_added = number new facilities can install distance_cutoff = distance consider coverage within. Similar using nearest - data frames existing_facility, proposed_facility, user need contain columns latitude longitude, must named “lat”, “long”, respectively. used calculate distance. can look quick summary model summary tells us useful information distance cutoff, number facilities added, number users covered, previousl, proportion events covered. get information can use information columns . information list, might seem strange, becomes useful assessing different levels n_added. go detail soon. Firstly, data input n_added distance_cutoff - information entered. can get summary information model coverage. can first get existing, previous coverage existing_coverage provides us information saw previously summarise_coverage. can get information coverage model added additional AEDs model_coverage. can get pieces information summary can drill deeper, get information facilities using facility_selected, returns facilities selected proposed_facility data. can get information users augmented_users returns dataframe users, distance nearest AED, end, provides information type AED used. Now try run code n_added = 40, call “mc_40”","code":"# mc_20 <- max_coverage(A = dat_dist_indic, mc_20 <- max_coverage(existing_facility = york_existing,                       proposed_facility = york_proposed,                       user = york_crime,                       n_added = 20,                       distance_cutoff = 100) summary(mc_20) ##  ## -------------------------------------------  ## Model Fit: maxcovr fixed location model  ## -------------------------------------------  ## Distance Cutoff: 100m  ## Facilities:  ##     Added:       20  ## Coverage (Previous):  ##     # Users:     540    (339)  ##     Proportion:  0.2977 (0.1869)  ## Distance (m) to Facility (Previous):  ##     Avg:         886 (1400)  ##     SD:          986 (1597)  ## ------------------------------------------- mc_20$n_added[[1]] ## [1] 20 mc_20$distance_cutoff[[1]] ## [1] 100 mc_20$existing_coverage[[1]] ## # A tibble: 1 × 8 ##   n_added distance_within n_cov pct_cov n_not_cov pct_not_cov dist_avg dist_sd ##     <dbl>           <dbl> <int>   <dbl>     <int>       <dbl>    <dbl>   <dbl> ## 1       0             100   339   0.187      1475       0.813    1400.   1597. mc_20$model_coverage[[1]] ## # A tibble: 1 × 8 ##   n_added distance_within n_cov pct_cov n_not_cov pct_not_cov dist_avg dist_sd ##     <dbl>           <dbl> <int>   <dbl>     <int>       <dbl>    <dbl>   <dbl> ## 1      20             100   540   0.298      1274       0.702     886.    986. mc_20$summary[[1]] ## # A tibble: 2 × 8 ##   n_added distance_within n_cov pct_cov n_not_cov pct_not_cov dist_avg dist_sd ##     <dbl>           <dbl> <int>   <dbl>     <int>       <dbl>    <dbl>   <dbl> ## 1       0             100   339   0.187      1475       0.813    1400.   1597. ## 2      20             100   540   0.298      1274       0.702     886.    986. mc_20$facility_selected[[1]] ## # A tibble: 20 × 7 ##     long   lat object_id desig_id pref_ref name                            grade ##    <dbl> <dbl>     <int> <chr>       <int> <chr>                           <chr> ##  1 -1.09  54.0      5978 DYO1383    462917 NA                              II    ##  2 -1.08  54.0      5909 DYO1297    463072 NA                              II    ##  3 -1.08  54.0      5872 DYO1244    463186 NA                              II    ##  4 -1.08  54.0      5847 DYO1216    463242 NA                              II    ##  5 -1.12  54.0      5759 DYO1108    463434 FORMER JUNIOR SCHOOL BUILDING … II    ##  6 -1.08  54.0      5748 DYO1096    463469 NA                              II    ##  7 -1.08  54.0      5745 DYO1093    463465 NA                              II    ##  8 -1.08  54.0      5739 DYO1086    463457 CHURCH OF ST GEORGE AND ATTACH… II    ##  9 -1.10  54.0      5642 DYO960     463695 NA                              II    ## 10 -1.09  53.9      5606 DYO920     463771 PRESS STAND AT YORK RACECOURSE  II    ## 11 -1.06  54.0      5592 DYO903     463788 NA                              II    ## 12 -1.07  54.0      5588 DYO899     463782 NA                              II    ## 13 -1.08  54.0      5529 DYO829     463938 CHURCH OF ST THOMAS             II    ## 14 -1.08  54.0      5454 DYO705     464133 NUMBERS 45-51 (ODD) AND ATTACH… II    ## 15 -1.03  54.0      5373 DYO1644        NA War Memorial                    II    ## 16 -1.12  54.0      5349 DYO572     464451 POPPLETON ROAD SCHOOL           II    ## 17 -1.08  54.0      5328 DYO544     464508 WOODS MILL                      II    ## 18 -1.00  54.0      3215 DYO1581    491367 STOCKTON GRANGE AND ATTACHED O… II    ## 19 -1.08  54.0      3213 DYO1580    490659 NEW CHAPEL AT ST JOHN'S COLLEGE II    ## 20 -1.08  54.0      4803 DYO1734        NA The Swan Public House           II mc_20$augmented_users[[1]] ## # A tibble: 1,814 × 19 ##    to_id nearest_id distance user_id category persistent_id date  lat_to long_to ##    <dbl>      <dbl>    <dbl>   <int> <chr>    <chr>         <chr>  <dbl>   <dbl> ##  1     1          3     84.3       1 anti-so… 62299914865f… 2016…   54.0   -1.08 ##  2     2         16    512.        2 anti-so… 4e34f53d247f… 2016…   54.0   -1.12 ##  3     3          3     65.2       3 anti-so… 2a0062f3dfac… 2016…   54.0   -1.08 ##  4     4         31    286.        4 anti-so… eb53e09ae46a… 2016…   54.0   -1.09 ##  5     5         20    231.        5 anti-so… 6139f131b724… 2016…   54.0   -1.08 ##  6     6          8     22.8       6 anti-so… d8de26d5af47… 2016…   54.0   -1.08 ##  7     7         22   2136.        7 anti-so… 5b742b1cb918… 2016…   54.0   -1.09 ##  8     8         26   2329.        8 anti-so… d2112b4fd0a0… 2016…   54.0   -1.11 ##  9     9         49     37.4       9 anti-so… 30bf5bfa97c5… 2016…   54.0   -1.09 ## 10    10          5   3150.       10 anti-so… d75bbe6c18bf… 2016…   54.0   -1.17 ## # ℹ 1,804 more rows ## # ℹ 10 more variables: street_id <chr>, street_name <chr>, context <chr>, ## #   id <chr>, location_type <chr>, location_subtype <chr>, ## #   outcome_status <chr>, lat_nearest <dbl>, long_nearest <dbl>, type <chr>"},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"interpreting-results","dir":"Articles","previous_headings":"","what":"Interpreting results","title":"Using maxcovr","text":"can assess happens add 100 facilities. , want add information discover differences 20 100, can bind two pieces together using bind_rows. can look summary row, expand information using tidyr::unnest() information can plotted, example, like :  can produce plot average distances.  like calculate summaries distances, recommend something like: can package function apply rows can used create new column purrr::map().","code":"mc_100 <- max_coverage(existing_facility = york_existing,                       proposed_facility = york_proposed,                       user = york_crime,                       n_added = 100,                       distance_cutoff = 100) summary(mc_100) ##  ## -------------------------------------------  ## Model Fit: maxcovr fixed location model  ## -------------------------------------------  ## Distance Cutoff: 100m  ## Facilities:  ##     Added:       100  ## Coverage (Previous):  ##     # Users:     693    (339)  ##     Proportion:  0.382 (0.1869)  ## Distance (m) to Facility (Previous):  ##     Avg:         555 (1400)  ##     SD:          696 (1597)  ## ------------------------------------------- mc_20_100 <- bind_rows(mc_20, mc_100) mc_20_100_sum <- mc_20_100 %>% select(summary) %>% tidyr::unnest() ## Warning: `cols` is now required when using `unnest()`. ## ℹ Please use `cols = c(summary)`. mc_20_100_sum ## # A tibble: 4 × 8 ##   n_added distance_within n_cov pct_cov n_not_cov pct_not_cov dist_avg dist_sd ##     <dbl>           <dbl> <int>   <dbl>     <int>       <dbl>    <dbl>   <dbl> ## 1       0             100   339   0.187      1475       0.813    1400.   1597. ## 2      20             100   540   0.298      1274       0.702     886.    986. ## 3       0             100   339   0.187      1475       0.813    1400.   1597. ## 4     100             100   693   0.382      1121       0.618     555.    696. library(ggplot2) ggplot(mc_20_100_sum,        aes(x = n_added,            y = pct_cov)) +      geom_point() +      geom_line() library(ggplot2) ggplot(mc_20_100_sum,        aes(x = n_added,            y = dist_avg)) +      geom_point() +      geom_line() mc_20$augmented_users[[1]] %>%     summarise(mean_dist = mean(distance),               sd_dist = sd(distance),               median_dist = median(distance),               lower_975_dist = quantile(distance, probs = 0.025),               upper_975_dist = quantile(distance, probs = 0.975)) ## # A tibble: 1 × 5 ##   mean_dist sd_dist median_dist lower_975_dist upper_975_dist ##       <dbl>   <dbl>       <dbl>          <dbl>          <dbl> ## 1      886.    986.        613.           17.1          3526. my_dist_summary <-  function(data){     data %>%     summarise(mean_dist = mean(distance),               sd_dist = sd(distance),               median_dist = median(distance),               lower_975_dist = quantile(distance, probs = 0.025),               upper_975_dist = quantile(distance, probs = 0.975)) } mc_20_100 %>%     mutate(new_summary = purrr::map(augmented_users,                                     my_dist_summary)) %>%     select(new_summary) %>%     tidyr::unnest() ## Warning: `cols` is now required when using `unnest()`. ## ℹ Please use `cols = c(new_summary)`. ## # A tibble: 2 × 5 ##   mean_dist sd_dist median_dist lower_975_dist upper_975_dist ##       <dbl>   <dbl>       <dbl>          <dbl>          <dbl> ## 1      886.    986.        613.           17.1          3526. ## 2      555.    696.        307.           16.2          2277."},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"other-graphics-options","dir":"Articles","previous_headings":"","what":"Other graphics options","title":"Using maxcovr","text":"might interested plotting existing users, proposed facilities, coverage. can plot existing facilities leaflet. might want add user information plot. can add new circles based new datasets, change colour, visible. leaflet can also specify radius metres circles. means can set radius circles 100, 100m. make bit clearer can remove fill (fill = FALSE), also change map used addProviderTiles(\"CartoDB.Positron\").","code":"york_existing %>%     leaflet() %>%     addTiles() %>%     addCircles(color = \"steelblue\") %>%      setView(lng = median(york_existing$long),             lat = median(york_existing$lat),             zoom = 12) ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively leaflet() %>%     addCircles(data = york_crime,                 color = \"steelblue\") %>%     addCircles(data = york_existing,                 color = \"coral\") %>%     addTiles() %>%     setView(lng = median(york$long),             lat = median(york$lat),             zoom = 15) ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively leaflet() %>%     addCircles(data = york_crime,                 color = \"steelblue\") %>%     addCircles(data = york_existing,                 radius = 100,                color = \"coral\") %>%     addTiles() %>%     setView(lng = median(york$long),             lat = median(york$lat),             zoom = 15) ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively leaflet() %>%     addCircles(data = york_crime,                 color = \"steelblue\") %>%     addCircles(data = york_existing,                 radius = 100,                fill = FALSE,                color = \"coral\",                weight = 3,                dashArray = \"1,5\") %>%     addProviderTiles(\"CartoDB.Positron\") %>%     setView(lng = median(york$long),             lat = median(york$lat),             zoom = 15) ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively"},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"applying-this-to-the-coverage-data","dir":"Articles","previous_headings":"Other graphics options","what":"Applying this to the coverage data","title":"Using maxcovr","text":"using knowledge, can visualise: crime (york_crime) existing facilities (york_existing) newly placed facilities (mc_20$facility_selected[[1]])","code":"leaflet() %>%     addCircles(data = york_crime,                 color = \"steelblue\") %>%     addCircles(data = york_existing,                 radius = 100,                fill = FALSE,                weight = 3,                color = \"coral\",                dashArray = \"1,5\") %>%     addCircles(data = mc_20$facility_selected[[1]],                 radius = 100,                fill = FALSE,                weight = 3,                color = \"green\",                dashArray = \"1,5\") %>%     addProviderTiles(\"CartoDB.Positron\") %>%     setView(lng = median(york$long),             lat = median(york$lat),             zoom = 15) ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively ## Assuming \"long\" and \"lat\" are longitude and latitude, respectively"},{"path":"https://maxcovr.njtierney.com/articles/intro_to_maxcovr.html","id":"future-work","dir":"Articles","previous_headings":"","what":"Future work","title":"Using maxcovr","text":"future maxcovr able talk commercial solvers like CPLEX Gurobi, mechanism extensions.","code":""},{"path":"https://maxcovr.njtierney.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicholas Tierney. Author, maintainer. Mark Padgham. Author.","code":""},{"path":"https://maxcovr.njtierney.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tierney N, Padgham M (2024). maxcovr: Set Tools Solving Maximal Covering Location Problem. R package version 0.1.3.9200, https://njtierney.github.io/maxcovr/, https://maxcovr.njtierney.com/, https://github.com/njtierney/maxcovr.","code":"@Manual{,   title = {maxcovr: A Set of Tools For Solving The Maximal Covering Location Problem},   author = {Nicholas Tierney and Mark Padgham},   year = {2024},   note = {R package version 0.1.3.9200, https://njtierney.github.io/maxcovr/, https://maxcovr.njtierney.com/},   url = {https://github.com/njtierney/maxcovr}, }"},{"path":"https://maxcovr.njtierney.com/index.html","id":"maxcovr","dir":"","previous_headings":"","what":"A Set of Tools For Solving The Maximal Covering Location Problem","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"maxcovr created make easy non expert correctly solve maximum covering location problem described Church. Implementations problem (optimimum AED placement) may use commercial software AMPL, Gurobi, CPLEX, require expensive license, use open source licenses provide source code analysis performed (e.g., Bonnet 2014) builds substantial barrier implement reproduce analyses. maxcovr created make results easy implement, reproduce, extend using: R, free open source language Open source solvers, glpk lpSolve, can used Linux, Windows, OSX. Real-world, open source example data. Tidyverse principles make easy use reason . Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://maxcovr.njtierney.com/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to Install","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"Install development version maxcovr r-universe: (Note - installing r-universe just like installing CRAN, faster convenient installing GitHub) install using remotes:","code":"install.packages(\"maxcovr\", repos = c(\"https://njtierney.r-universe.dev\", \"https://cloud.r-project.org\")) # install.packages(\"remotes\") remotes::install_github(\"njtierney/maxcovr\")"},{"path":"https://maxcovr.njtierney.com/index.html","id":"using-maxcovr","dir":"","previous_headings":"","what":"Using maxcovr","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"Disclaimer: following fictitious example using real world data. Consider toy example playing tower defense game need place crime surveillance towers detect crime. two datasets, york, york_crime: york contains listed building GPS locations city York, provided city york york_crime contains set crime data ukpolice package, containing crime data September 2016. game already towers built, placed top listed buildings grade . call dataset york_selected, remaining building locations york_unselected purpose game build towers places within 100m crime. going use crime data help us choose ideal locations place towers. can illustrated following graphic, red circles indicate current coverage building locations, blue crimes within circles within coverage.  Currently coverage looks alright, let’s verify coverage using nearest function. nearest takes two dataframes returns nearest lat/long coords first dataframe second dataframe, along distances appropriate columns building dataframe. can instead return dataframe every building rows, nearest crime building, simply changing order. evaluate coverage can use coverage. reads find coverage york buildings () crimes. Coverage first thing second thing. , many second thing covered first thing. tells us crime, 18.68% within 100m, 339 crimes covered, mean distance surveillance camera 1400m.","code":"library(maxcovr) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # subset to be the places with towers built on them. york_selected <- york %>% filter(grade == \"I\")  york_unselected <- york %>% filter(grade != \"I\") library(leaflet)  leaflet() %>%     addCircleMarkers(data = york,                       radius = 1,                      color = \"steelblue\") %>%     addCircles(data = york_selected,                 radius = 100,                stroke = TRUE,                fill = NULL,                opacity = 0.8,                weight = 2,                color = \"coral\") %>%     addProviderTiles(\"CartoDB.Positron\") %>%     setView(lng = median(york$long),             lat = median(york$lat),             zoom = 15) #> Assuming \"long\" and \"lat\" are longitude and latitude, respectively #> Assuming \"long\" and \"lat\" are longitude and latitude, respectively dat_dist <- york_selected %>% nearest(york_crime)  head(dat_dist) #> # A tibble: 6 × 22 #>   to_id nearest_id distance category          persistent_id date  lat_to long_to #>   <dbl>      <dbl>    <dbl> <chr>             <chr>         <chr>  <dbl>   <dbl> #> 1     1         66    166.  anti-social-beha… 62299914865f… 2016…   54.0   -1.08 #> 2     2         48   2087.  anti-social-beha… 4e34f53d247f… 2016…   54.0   -1.12 #> 3     3         55     68.2 anti-social-beha… 2a0062f3dfac… 2016…   54.0   -1.08 #> 4     4         11    286.  anti-social-beha… eb53e09ae46a… 2016…   54.0   -1.09 #> 5     5         25    536.  anti-social-beha… 6139f131b724… 2016…   54.0   -1.08 #> 6     6         20    160.  anti-social-beha… d8de26d5af47… 2016…   54.0   -1.08 #> # ℹ 14 more variables: street_id <chr>, street_name <chr>, context <chr>, #> #   id <chr>, location_type <chr>, location_subtype <chr>, #> #   outcome_status <chr>, long_nearest <dbl>, lat_nearest <dbl>, #> #   object_id <int>, desig_id <chr>, pref_ref <int>, name <chr>, grade <chr> dat_dist_bldg <- york_crime %>% nearest(york_selected) head(dat_dist_bldg) #> # A tibble: 6 × 22 #>   to_id nearest_id distance long_to lat_to object_id desig_id pref_ref name      #>   <dbl>      <dbl>    <dbl>   <dbl>  <dbl>     <int> <chr>       <int> <chr>     #> 1     1         33     36.0   -1.09   54.0      6144 DYO1195    463280 GUILDHAL… #> 2     2        183     35.8   -1.09   54.0      6142 DYO1373    462942 BOOTHAM … #> 3     3        503     95.3   -1.08   54.0      3463 DYO365     464845 THE NORM… #> 4     4        273     44.3   -1.08   54.0      3461 DYO583     464427 CHURCH O… #> 5     5        908     26.5   -1.08   54.0      3460 DYO916     463764 CUMBERLA… #> 6     6        495    326.    -1.13   54.0      3450 DYO1525    328614 CHURCH O… #> # ℹ 13 more variables: grade <chr>, category <chr>, persistent_id <chr>, #> #   date <chr>, lat_nearest <dbl>, long_nearest <dbl>, street_id <chr>, #> #   street_name <chr>, context <chr>, id <chr>, location_type <chr>, #> #   location_subtype <chr>, outcome_status <chr> coverage(york_selected, york_crime) #> # A tibble: 1 × 7 #>   distance_within n_cov n_not_cov prop_cov prop_not_cov dist_avg dist_sd #>             <dbl> <int>     <int>    <dbl>        <dbl>    <dbl>   <dbl> #> 1             100   339      1475    0.187        0.813    1400.   1597."},{"path":"https://maxcovr.njtierney.com/index.html","id":"maximising-coverage","dir":"","previous_headings":"","what":"Maximising coverage","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"Say want add another 20 surveillance towers, want use best 20, use max_coverage. max_coverage actually returns dataframe lists. handy means later want explore multiple n_added, say want explore coverage changes 20, 40, 60, 80, 100 n_added, added rows dataframe, makes easier summaries manipulate. Important features dataframe : facility_selected: dataframe proposed_facilities, containing facilities selected optimisation. user_affected: dataframe user, contains users affected new optimised placement model_coverage: dataframe containing summary info number users covered, percentage coverage, average distance. existing_coverage: returns similar summary dataframe original coverage, existing_facilities. summary: returns binded model_coverage existing_coverage. n_added: number things added distance_cutoff: distance cutoff selected One can also use map purrr fit many different configurations n_added. (Future work look allowing n_added take vector arguments). returns list dataframes, can bind together like : can visualise effect coverage:  can read use max_coverage, covering topics like cross validation vignette.","code":"system.time( # mc_20 <- max_coverage(A = dat_dist_indic, mc_20 <- max_coverage(existing_facility = york_selected,                       proposed_facility = york_unselected,                       user = york_crime,                       n_added = 20,                       distance_cutoff = 100) ) #>    user  system elapsed  #>   0.556   0.032   0.604 mc_20 #>  #> -------------------------------------------  #> Model Fit: maxcovr fixed location model  #> -------------------------------------------  #> model_used:        max_coverage  #> existing_facility: york_selected  #> proposed_facility: york_unselected  #> user:              york_crime  #> distance_cutoff:   100  #> n_added:           20  #> d_existing_user:            lpSolve  #> ------------------------------------------- library(purrr) n_add_vec <- c(20, 40, 60, 80, 100)  system.time( map_mc_model <- map_df(.x = n_add_vec,                        .f = ~max_coverage(existing_facility = york_selected,                                           proposed_facility = york_unselected,                                           user = york_crime,                                           distance_cutoff = 100,                                           n_added = .)) ) #>    user  system elapsed  #>   1.848   0.085   1.940 map_cov_results <- bind_rows(map_mc_model$model_coverage) library(ggplot2) bind_rows(map_mc_model$existing_coverage[[1]],           map_cov_results) %>%     ggplot(aes(x = factor(n_added),                y = pct_cov)) +      geom_point() +     geom_line(group = 1) +      theme_minimal()"},{"path":"https://maxcovr.njtierney.com/index.html","id":"known-issues","dir":"","previous_headings":"","what":"Known Issues","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"max_coverage() may take bit time run, depending data size. initial testing, product number rows proposed_facilities users exceeds 100 million, might take 1 minute. course, may depend structure / complexity data problem. distances calculated maxcovr use haversines formula, makes assumption earth sphere calculates greater circle distance. Whilst wholly correct, haversine useful approximation reasonable small scale distances, accuracy can within metres maxcovr initially built . future maxcovr use accurate distance functions provided geodist, give user control distance calculation used (haversines, vincenty, cheap ruler, geodesic, etc).","code":""},{"path":"https://maxcovr.njtierney.com/index.html","id":"future-work","dir":"","previous_headings":"","what":"Future Work","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"focussing making maxcovr work well within tidyverse. includes providing sensible standard summaries using key function verbs broom, adding exploratory plots, improving speed using Rcpp, allowing users select solver want use. suggestions, please file issue get soon can.","code":""},{"path":"https://maxcovr.njtierney.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://maxcovr.njtierney.com/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"A Set of Tools For Solving The Maximal Covering Location Problem","text":"Oliver Czibula, initial help helping understand Maximum Covering Location Problem. Angelo Auricchio Antonietta Mira supervision. Alessio Quaglino Jost Reinhold help implementing first implementation problem lpSolve. Martin Weiser suggestion relocation process. Matt Sutton thoughtful explanations interact high level solvers, led implementing maxcovr lpsolve, glpk, gurobi. Alex Simmons, teaching write better C++ code.","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_facility_relocated.html","id":null,"dir":"Reference","previous_headings":"","what":"Find distance from relocated and proposed new sites — augment_facility_relocated","title":"Find distance from relocated and proposed new sites — augment_facility_relocated","text":"takes proposed sites existing sites, additional information model, returns dataframe existing facilities relocated, provides distance nearest facility, presumably location relocated .","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_facility_relocated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find distance from relocated and proposed new sites — augment_facility_relocated","text":"","code":"augment_facility_relocated(proposed_facility, existing_facility)"},{"path":"https://maxcovr.njtierney.com/reference/augment_facility_relocated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find distance from relocated and proposed new sites — augment_facility_relocated","text":"proposed_facility facilities proposed model - data extra information (is_installed) . existing_facility facilities existing model - data extra information (is_relocated) .","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_facility_relocated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find distance from relocated and proposed new sites — augment_facility_relocated","text":"dataframe","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/reference/augment_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment users data; add useful information — augment_user","title":"Augment users data; add useful information — augment_user","text":"returns user dataframe, added columns containing distance user given facility - IDs generated IDs facilities correspond row number.","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment users data; add useful information — augment_user","text":"","code":"augment_user(facilities_selected, existing_facilities, existing_users)"},{"path":"https://maxcovr.njtierney.com/reference/augment_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment users data; add useful information — augment_user","text":"facilities_selected dataframe facilities selected, obtained extract_facility_selected existing_facilities existing facilities existing_users existing users","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment users data; add useful information — augment_user","text":"tibble users, distances user facility","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment users data; add useful information — augment_user","text":"","code":"if (FALSE) { # \\dontrun{  mc_facilities_selected <-extract_facility_selected(   solution_vector = x$lp_solution$solution,   A_mat = x$A,   proposed_facilities = x$proposed_facility)  augmented_users <- augment_user(     facilities_selected = mc_facilities_selected,     existing_facilities = mc_cv_fit_n20_test_1$existing_facility,     existing_users = mc_cv_fit_n20_test_1$existing_user     ) } # }"},{"path":"https://maxcovr.njtierney.com/reference/augment_user_tested.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest wrapper — augment_user_tested","title":"Nearest wrapper — augment_user_tested","text":"function wrapper nearest, adding is_covered model. function explicit inputs, useful cross validation - evaluating test data performs suggested facilities training set. might added nearest, may become obsolete.","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_user_tested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest wrapper — augment_user_tested","text":"","code":"augment_user_tested(all_facilities, test_data, distance_threshold = 100)"},{"path":"https://maxcovr.njtierney.com/reference/augment_user_tested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest wrapper — augment_user_tested","text":"all_facilities data.frame Facilities selected maxcovr model test_data data.frame test data (user-type data) distance_threshold numeric","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_user_tested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nearest wrapper — augment_user_tested","text":"dataframe containing distances test data observation nearest facility.","code":""},{"path":"https://maxcovr.njtierney.com/reference/augment_user_tested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nearest wrapper — augment_user_tested","text":"","code":"if (FALSE) { # \\dontrun{  mc_cv_relocate_n100_cut |>   mutate(user_nearest_test = map2(     .x = facilities_selected,     .y = test,     .f = augment_user_tested     ))  } # }"},{"path":"https://maxcovr.njtierney.com/reference/binary_distance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Create a binary distance matrix — binary_distance_matrix","title":"(Internal) Create a binary distance matrix — binary_distance_matrix","text":"wrapper function returns logical matrix, 1 distance element , j less equal distance_cutoff, 0 otherwise.","code":""},{"path":"https://maxcovr.njtierney.com/reference/binary_distance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Create a binary distance matrix — binary_distance_matrix","text":"","code":"binary_distance_matrix(facility, user, distance_cutoff, d_proposed_user = NULL)"},{"path":"https://maxcovr.njtierney.com/reference/binary_distance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Create a binary distance matrix — binary_distance_matrix","text":"facility data.frame facilities user data.frame users distance_cutoff integer distance use cutoff d_proposed_user Option distance matrix proposed facilities users (see Examples).","code":""},{"path":"https://maxcovr.njtierney.com/reference/binary_distance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Create a binary distance matrix — binary_distance_matrix","text":"logical matrix, 1 distance element , j less equal distance_cutoff, 0 otherwise.","code":""},{"path":"https://maxcovr.njtierney.com/reference/binary_matrix_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a binary matrix TRUE if distance satisfies a condition — binary_matrix_cpp","title":"Create a binary matrix TRUE if distance satisfies a condition — binary_matrix_cpp","text":"Create binary matrix TRUE distance satisfies condition","code":""},{"path":"https://maxcovr.njtierney.com/reference/binary_matrix_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a binary matrix TRUE if distance satisfies a condition — binary_matrix_cpp","text":"","code":"binary_matrix_cpp(facility, user, distance_cutoff)"},{"path":"https://maxcovr.njtierney.com/reference/binary_matrix_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a binary matrix TRUE if distance satisfies a condition — binary_matrix_cpp","text":"facility matrix longitude latitude first two columns user matrix longitude latitude first two columns distance_cutoff numeric indicating distance cutoff (metres) interested . number less distance_cutoff, 1, greater , 0.","code":""},{"path":"https://maxcovr.njtierney.com/reference/binary_matrix_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a binary matrix TRUE if distance satisfies a condition — binary_matrix_cpp","text":"logical matrix 1 distance element , j less equal distance_cutoff, 0 otherwise","code":""},{"path":"https://maxcovr.njtierney.com/reference/coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary of the coverage between two dataframes — coverage","title":"Create a summary of the coverage between two dataframes — coverage","text":"york building york crime context, writing nearest(york_crime,york) reads \"find nearest crime york building york, returns dataframe every building york, nearest york_crime building, distance metres two.\"","code":""},{"path":"https://maxcovr.njtierney.com/reference/coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary of the coverage between two dataframes — coverage","text":"","code":"coverage(nearest_df, to_df, distance_cutoff = 100, ...)"},{"path":"https://maxcovr.njtierney.com/reference/coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary of the coverage between two dataframes — coverage","text":"nearest_df dataframe containing latitude longitude to_df dataframe containing latitude longitude distance_cutoff integer distance threshold interested assessing coverage ... extra arguments pass nearest","code":""},{"path":"https://maxcovr.njtierney.com/reference/coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary of the coverage between two dataframes — coverage","text":"dataframe containing information distance threshold uses (distance_within), number events covered covered (n_cov, n_not_cov), percentage covered covered (pct_cov, pct_not_cov), average distance sd distance.","code":""},{"path":"https://maxcovr.njtierney.com/reference/coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary of the coverage between two dataframes — coverage","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # already existing locations york_selected <- york |> filter(grade == \"I\")  # proposed locations york_unselected <- york |> filter(grade != \"I\") coverage(york_selected, york_crime) #> # A tibble: 1 × 7 #>   distance_within n_cov n_not_cov prop_cov prop_not_cov dist_avg dist_sd #>             <dbl> <int>     <int>    <dbl>        <dbl>    <dbl>   <dbl> #> 1             100   339      1475    0.187        0.813    1400.   1597. coverage(york_crime, york_selected) #> # A tibble: 1 × 7 #>   distance_within n_cov n_not_cov prop_cov prop_not_cov dist_avg dist_sd #>             <dbl> <int>     <int>    <dbl>        <dbl>    <dbl>   <dbl> #> 1             100    54        17    0.761        0.239     120.    247."},{"path":"https://maxcovr.njtierney.com/reference/deg2rad_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert degrees to radians — deg2rad_cpp","title":"Convert degrees to radians — deg2rad_cpp","text":"Convert degrees radians","code":""},{"path":"https://maxcovr.njtierney.com/reference/deg2rad_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert degrees to radians — deg2rad_cpp","text":"","code":"deg2rad_cpp(deg)"},{"path":"https://maxcovr.njtierney.com/reference/deg2rad_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert degrees to radians — deg2rad_cpp","text":"deg degrees","code":""},{"path":"https://maxcovr.njtierney.com/reference/deg2rad_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert degrees to radians — deg2rad_cpp","text":"radians","code":""},{"path":"https://maxcovr.njtierney.com/reference/distance_matrix_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix of distances between two areas — distance_matrix_cpp","title":"Create a matrix of distances between two areas — distance_matrix_cpp","text":"Create matrix distances two areas","code":""},{"path":"https://maxcovr.njtierney.com/reference/distance_matrix_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix of distances between two areas — distance_matrix_cpp","text":"","code":"distance_matrix_cpp(facility, user)"},{"path":"https://maxcovr.njtierney.com/reference/distance_matrix_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix of distances between two areas — distance_matrix_cpp","text":"facility matrix longitude latitude first two columns user matrix longitude latitude first two columns","code":""},{"path":"https://maxcovr.njtierney.com/reference/distance_matrix_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix of distances between two areas — distance_matrix_cpp","text":"matrix distances metres user facility, nrow(user) rows nrow(facility) columns.","code":""},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Summarise maxcovr model using facility and user information — extract_mc_results","title":"(Internal) Summarise maxcovr model using facility and user information — extract_mc_results","text":"extract_mc_results takes fitted max_coverage object returns useful summary information model. exists manipulation functions outcomes solver another home - makes easier maintain package, heeds idea functions specialised. name function likely change near future.","code":""},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Summarise maxcovr model using facility and user information — extract_mc_results","text":"","code":"extract_mc_results(x)"},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Summarise maxcovr model using facility and user information — extract_mc_results","text":"x fitted model max_coverage.","code":""},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Summarise maxcovr model using facility and user information — extract_mc_results","text":"list containing multiple dataframes summarising model","code":""},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results_relocation.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Summarise maxcovr relocation model with facility and user info — extract_mc_results_relocation","title":"(Internal) Summarise maxcovr relocation model with facility and user info — extract_mc_results_relocation","text":"extract_mc_results_relocation takes fitted max_coverage object returns useful summary information model, specifically relocation method.","code":""},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results_relocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Summarise maxcovr relocation model with facility and user info — extract_mc_results_relocation","text":"","code":"extract_mc_results_relocation(x)"},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results_relocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Summarise maxcovr relocation model with facility and user info — extract_mc_results_relocation","text":"x fitted model max_coverage_relocation","code":""},{"path":"https://maxcovr.njtierney.com/reference/extract_mc_results_relocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Summarise maxcovr relocation model with facility and user info — extract_mc_results_relocation","text":"list containing multiple dataframes summarising model","code":""},{"path":"https://maxcovr.njtierney.com/reference/facility_user_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"facility_user_dist — facility_user_dist","title":"facility_user_dist — facility_user_dist","text":"Uses haversines formula calculate distance lat/long co-ordinates every facility every user, returning data_frame. can think \"facilities\" something like mobile towers, police centres, AED locations, \"users\" something like individual houses, crime locations, heart attack locations. motivating example function finding distance Automatic Electronic Defibrillators (AEDs) Hospital Cardiac Arrest (OHCA), locations AEDs OHCAs separate dataframes. Currently facility_user_dist makes strict assumption facility user dataframes columns named aed_id, lat, long, ohca_id, lat, long. updated soon.","code":""},{"path":"https://maxcovr.njtierney.com/reference/facility_user_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"facility_user_dist — facility_user_dist","text":"","code":"facility_user_dist(   facility,   user,   coverage_distance = 100,   nearest = \"facility\" )"},{"path":"https://maxcovr.njtierney.com/reference/facility_user_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"facility_user_dist — facility_user_dist","text":"facility dataframe containing columns named \"lat\", \"long\". user dataframe containing columns \"lat\", \"long\". coverage_distance numeric indicating coverage level facilities within metres user. Default value 100 metres. nearest character Can \"facility\", \"user\", \"\". Defaults \"facility\". set \"facility\", returns dataframe every row refers every user, closest facility user. set \"user\", returns dataframe every row every facility, closest user facility. set \"\", return every pairwise combination distances. careful default \"facility\".","code":""},{"path":"https://maxcovr.njtierney.com/reference/facility_user_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"facility_user_dist — facility_user_dist","text":"data frame containing two datasets joined together columns named facility_id, lat_facility, long_facility, user_id, lat_user, long_user, distance meters given facility user row.","code":""},{"path":"https://maxcovr.njtierney.com/reference/facility_user_indic.html","id":null,"dir":"Reference","previous_headings":"","what":"facility_user_indic — facility_user_indic","title":"facility_user_indic — facility_user_indic","text":"data manipulation function facility_user_dist. function creates spread matrix distances user facility. ohca_id column, column aed_id, given cell distance ohca row, column. distance converted indicator variable, based upon whether distance less provided dist_indic parameter. future might change dist_indic function optional, whole function mainly exists make easier computation max_coverage function.","code":""},{"path":"https://maxcovr.njtierney.com/reference/facility_user_indic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"facility_user_indic — facility_user_indic","text":"","code":"facility_user_indic(df_dist, dist_indic)"},{"path":"https://maxcovr.njtierney.com/reference/facility_user_indic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"facility_user_indic — facility_user_indic","text":"df_dist dataframe facility_user_dist. Requires nearest = \"\" dist_indic indicator distance want TRUE / FALSE","code":""},{"path":"https://maxcovr.njtierney.com/reference/facility_user_indic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"facility_user_indic — facility_user_indic","text":"dataframe variables user_id, facility_id_number, id facility_id transposed column name.","code":""},{"path":"https://maxcovr.njtierney.com/reference/find_users_not_covered.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Create a dataframe of the users not covered — find_users_not_covered","title":"(Internal) Create a dataframe of the users not covered — find_users_not_covered","text":"(Internal) Create dataframe users covered","code":""},{"path":"https://maxcovr.njtierney.com/reference/find_users_not_covered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Create a dataframe of the users not covered — find_users_not_covered","text":"","code":"find_users_not_covered(   existing_facility,   user,   distance_cutoff,   d_existing_user = NULL )"},{"path":"https://maxcovr.njtierney.com/reference/find_users_not_covered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Create a dataframe of the users not covered — find_users_not_covered","text":"existing_facility data.frame existing facilities user data.frame existing users distance_cutoff integer distance cutoff d_existing_user Optional distance matrix existing facilities users.","code":""},{"path":"https://maxcovr.njtierney.com/reference/find_users_not_covered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Create a dataframe of the users not covered — find_users_not_covered","text":"data.frame users covered current facilities","code":""},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the object is a maxcovr object — is.maxcovr","title":"Test if the object is a maxcovr object — is.maxcovr","text":"Test object maxcovr object","code":""},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the object is a maxcovr object — is.maxcovr","text":"","code":"is.maxcovr(x)"},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the object is a maxcovr object — is.maxcovr","text":"x object","code":""},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the object is a maxcovr object — is.maxcovr","text":"TRUE object inherits maxcovr class.","code":""},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr_relocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the object is a maxcovr_relocation object — is.maxcovr_relocation","title":"Test if the object is a maxcovr_relocation object — is.maxcovr_relocation","text":"Test object maxcovr_relocation object","code":""},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr_relocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the object is a maxcovr_relocation object — is.maxcovr_relocation","text":"","code":"is.maxcovr_relocation(x)"},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr_relocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the object is a maxcovr_relocation object — is.maxcovr_relocation","text":"x object","code":""},{"path":"https://maxcovr.njtierney.com/reference/is.maxcovr_relocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the object is a maxcovr_relocation object — is.maxcovr_relocation","text":"TRUE object inherits maxcovr_relocation class.","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve the Maximal Covering Location Problem — max_coverage","title":"Solve the Maximal Covering Location Problem — max_coverage","text":"max_coverage solves binary optimisation problem known \"maximal covering location problem\" described Church (http://www.geo .ucsb.edu/~forest/G294download/MAX_COVER_RLC_CSR.pdf). package implemented make easier solve problem context research initially presented Chan et al (http://circ.ahajournals.org/content/127/17/1801.short) identify ideal locations place AEDs.","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve the Maximal Covering Location Problem — max_coverage","text":"","code":"max_coverage(   existing_facility,   proposed_facility,   user,   distance_cutoff,   n_added,   d_existing_user = NULL,   d_proposed_user = NULL,   solver = \"glpk\" )"},{"path":"https://maxcovr.njtierney.com/reference/max_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve the Maximal Covering Location Problem — max_coverage","text":"existing_facility data.frame containing facilities already existing, columns names lat, long. proposed_facility data.frame containing facilities proposed, column names lat, long. user data.frame containing users facilities, along column names lat, long. distance_cutoff numeric indicating distance cutoff (metres) interested . number less distance_cutoff, 1, greater , 0. n_added maximum number facilities add. d_existing_user Optional distance matrix existing facilities users. Default distances direct (geospherical ellipsoidal) distances; allows alternative measures street-network distances submitted (see Examples). d_proposed_user Option distance matrix proposed facilities users (see Examples). solver character \"glpk\" (default) \"lpSolve\". \"gurobi\" currently development, see https://github.com/njtierney/maxcovr/issues/25.","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve the Maximal Covering Location Problem — max_coverage","text":"dataframe results","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve the Maximal Covering Location Problem — max_coverage","text":"","code":"library(dplyr)  # already existing locations york_selected <- york |> filter(grade == \"I\")  # proposed locations york_unselected <- york |> filter(grade != \"I\")  mc_result <- max_coverage(existing_facility = york_selected,                           proposed_facility = york_unselected,                           user = york_crime,                           distance_cutoff = 100,                           n_added = 20)  mc_result #>  #> -------------------------------------------  #> Model Fit: maxcovr fixed location model  #> -------------------------------------------  #> model_used:        max_coverage  #> existing_facility: york_selected  #> proposed_facility: york_unselected  #> user:              york_crime  #> distance_cutoff:   100  #> n_added:           20  #> d_existing_user:            lpSolve  #> -------------------------------------------  summary(mc_result) #>  #> -------------------------------------------  #> Model Fit: maxcovr fixed location model  #> -------------------------------------------  #> Distance Cutoff: 100m  #> Facilities:  #>     Added:       20  #> Coverage (Previous):  #>     # Users:     540    (339)  #>     Proportion:  0.2977 (0.1869)  #> Distance (m) to Facility (Previous):  #>     Avg:         886 (1400)  #>     SD:          986 (1597)  #> -------------------------------------------  # get the facilities chosen mc_result$facility_selected #> [[1]] #> # A tibble: 20 × 7 #>     long   lat object_id desig_id pref_ref name                            grade #>    <dbl> <dbl>     <int> <chr>       <int> <chr>                           <chr> #>  1 -1.09  54.0      5978 DYO1383    462917 NA                              II    #>  2 -1.08  54.0      5909 DYO1297    463072 NA                              II    #>  3 -1.08  54.0      5872 DYO1244    463186 NA                              II    #>  4 -1.08  54.0      5847 DYO1216    463242 NA                              II    #>  5 -1.12  54.0      5759 DYO1108    463434 FORMER JUNIOR SCHOOL BUILDING … II    #>  6 -1.08  54.0      5748 DYO1096    463469 NA                              II    #>  7 -1.08  54.0      5745 DYO1093    463465 NA                              II    #>  8 -1.08  54.0      5739 DYO1086    463457 CHURCH OF ST GEORGE AND ATTACH… II    #>  9 -1.10  54.0      5642 DYO960     463695 NA                              II    #> 10 -1.09  53.9      5606 DYO920     463771 PRESS STAND AT YORK RACECOURSE  II    #> 11 -1.06  54.0      5592 DYO903     463788 NA                              II    #> 12 -1.07  54.0      5588 DYO899     463782 NA                              II    #> 13 -1.08  54.0      5529 DYO829     463938 CHURCH OF ST THOMAS             II    #> 14 -1.08  54.0      5454 DYO705     464133 NUMBERS 45-51 (ODD) AND ATTACH… II    #> 15 -1.03  54.0      5373 DYO1644        NA War Memorial                    II    #> 16 -1.12  54.0      5349 DYO572     464451 POPPLETON ROAD SCHOOL           II    #> 17 -1.08  54.0      5328 DYO544     464508 WOODS MILL                      II    #> 18 -1.00  54.0      3215 DYO1581    491367 STOCKTON GRANGE AND ATTACHED O… II    #> 19 -1.08  54.0      3213 DYO1580    490659 NEW CHAPEL AT ST JOHN'S COLLEGE II    #> 20 -1.08  54.0      4803 DYO1734        NA The Swan Public House           II    #>   # get the users affected mc_result$user_affected #> [[1]] #> # A tibble: 201 × 16 #>    user_id user_chosen facility_id distance category   persistent_id date    lat #>      <dbl>       <int>       <dbl>    <dbl> <chr>      <chr>         <chr> <dbl> #>  1       1           1          66     166. anti-soci… 62299914865f… 2016…  54.0 #>  2       5           1          25     536. anti-soci… 6139f131b724… 2016…  54.0 #>  3      13           1           6    2334. anti-soci… c2aac5cdf98e… 2016…  54.0 #>  4      14           1           2   12687. anti-soci… c0908b075c68… 2016…  54.1 #>  5      15           1          24     620. anti-soci… 40c8c061c48b… 2016…  54.0 #>  6      21           1          60    1286. anti-soci… 45ce21c8785e… 2016…  53.9 #>  7      23           1          NA      NA  NA         NA            NA     NA   #>  8      24           1          NA      NA  NA         NA            NA     NA   #>  9      27           1          NA      NA  NA         NA            NA     NA   #> 10      29           1           2     375. anti-soci… db6cacd76d97… 2016…  54.0 #> # ℹ 191 more rows #> # ℹ 8 more variables: long <dbl>, street_id <chr>, street_name <chr>, #> #   context <chr>, id <chr>, location_type <chr>, location_subtype <chr>, #> #   outcome_status <chr> #>   # get the summaries mc_result$summary #> [[1]] #> # A tibble: 2 × 8 #>   n_added distance_within n_cov pct_cov n_not_cov pct_not_cov dist_avg dist_sd #>     <dbl>           <dbl> <int>   <dbl>     <int>       <dbl>    <dbl>   <dbl> #> 1       0             100   339   0.187      1475       0.813    1400.   1597. #> 2      20             100   540   0.298      1274       0.702     886.    986. #>   # Example of street-network distance calculations if (FALSE) { # \\dontrun{ library(dodgr) net <- dodgr_streetnet_sf (\"york england\") |>     weight_streetnet (wt_profile = \"foot\")  from <- match_points_to_graph (v, york_selected[, c (\"long\", \"lat\")]) to <- match_points_to_graph (v, york_crime[, c (\"long\", \"lat\")]) d_existing_user <- dodgr_dists (net, from = from, to = to)  from <- match_points_to_graph (v, york_unselected[, c (\"long\", \"lat\")]) d_proposed_user <- dodgr_dists (net, from = from, to = to)  mc_result <- max_coverage(existing_facility = york_selected,                           proposed_facility = york_unselected,                           user = york_crime,                           distance_cutoff = 100,                           n_added = 20,                           d_existing_user = d_existing_user,                           d_proposed_user = d_proposed_user)  } # }"},{"path":"https://maxcovr.njtierney.com/reference/max_coverage_relocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Coverage when considering relocation — max_coverage_relocation","title":"Maximum Coverage when considering relocation — max_coverage_relocation","text":"function adds relocation step","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage_relocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Coverage when considering relocation — max_coverage_relocation","text":"","code":"max_coverage_relocation(   existing_facility = NULL,   proposed_facility,   user,   distance_cutoff,   cost_install,   cost_removal,   cost_total,   solver = \"lpSolve\",   return_early = FALSE )"},{"path":"https://maxcovr.njtierney.com/reference/max_coverage_relocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Coverage when considering relocation — max_coverage_relocation","text":"existing_facility data.frame containing facilities already existing, columns names lat, long. proposed_facility data.frame containing facilities proposed, column names lat, long. user data.frame containing users facilities, along column names lat, long. distance_cutoff numeric indicating distance cutoff (metres) interested . number less distance_cutoff, 1, greater , 0. cost_install integer cost installing new facility cost_removal integer cost removing facility cost_total integer total cost allocated project solver character \"glpk\" (default) \"lpSolve\". \"gurobi\" currently development, see https://github.com/njtierney/maxcovr/issues/25 return_early logical TRUE want run extraction process, FALSE want just return lpsolve model etc.","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage_relocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Coverage when considering relocation — max_coverage_relocation","text":"dataframe results","code":""},{"path":"https://maxcovr.njtierney.com/reference/max_coverage_relocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Coverage when considering relocation — max_coverage_relocation","text":"","code":"if (FALSE) { # \\dontrun{  library(dplyr) # subset to be the places with towers built on them.  york_selected <- york |> filter(grade == \"I\")  york_unselected <- york |> filter(grade != \"I\")  # OK, what if I just use some really crazy small data to optimise over.  #  mc_relocate <-  max_coverage_relocation(existing_facility = york_selected,                                         proposed_facility = york_unselected,                                         user = york_crime,                                         distance_cutoff = 100,                                         cost_install = 5000,                                         cost_removal = 200,                                         cost_total = 600000)  mc_relocate  summary(mc_relocate)  } # }"},{"path":"https://maxcovr.njtierney.com/reference/maxcovr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"maxcovr: A Set of Tools For Solving The Maximal Covering Location Problem — maxcovr-package","title":"maxcovr: A Set of Tools For Solving The Maximal Covering Location Problem — maxcovr-package","text":"Solving \"maximal covering location problem\" described Church can difficult users familiar linear programming. maxcovr provides functions make easy solve problem, tools calculate facility coverage.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/reference/maxcovr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"maxcovr: A Set of Tools For Solving The Maximal Covering Location Problem — maxcovr-package","text":"Maintainer: Nicholas Tierney nicholas.tierney@gmail.com (ORCID) Authors: Mark Padgham mark.padgham@email.com","code":""},{"path":"https://maxcovr.njtierney.com/reference/n_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the number of facilities installed — n_installed","title":"Extract the number of facilities installed — n_installed","text":"Using model-modified dataframe proposed_facility, count number events installed.","code":""},{"path":"https://maxcovr.njtierney.com/reference/n_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the number of facilities installed — n_installed","text":"","code":"n_installed(proposed_facility)"},{"path":"https://maxcovr.njtierney.com/reference/n_installed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the number of facilities installed — n_installed","text":"proposed_facility dataframe mc_model, facilities proposed additional information whether facility installed - is_installed","code":""},{"path":"https://maxcovr.njtierney.com/reference/n_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the number of facilities installed — n_installed","text":"datafrmae","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/reference/n_relocated.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the number of facilities relocated. — n_relocated","title":"Extract the number of facilities relocated. — n_relocated","text":"Extract number facilities relocated.","code":""},{"path":"https://maxcovr.njtierney.com/reference/n_relocated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the number of facilities relocated. — n_relocated","text":"","code":"n_relocated(existing_facility)"},{"path":"https://maxcovr.njtierney.com/reference/n_relocated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the number of facilities relocated. — n_relocated","text":"existing_facility facilities originally existing, output model (e.g., model$existing_facility[[1]])","code":""},{"path":"https://maxcovr.njtierney.com/reference/n_relocated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the number of facilities relocated. — n_relocated","text":"dataframe containing one column number things relocated","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/reference/nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the nearest lat/long to another lat/long — nearest","title":"Find the nearest lat/long to another lat/long — nearest","text":"function finds nearest lat/long pairs another lat/long pair. york building york crime context, writing nearest(york_crime,york) reads \"find nearest crime york building york, returns dataframe every building york, nearest york_crime building, distance metres two. Likewise, write nearest(york, york_crime), return nearest building every crime. nearest assumes names latitude longitude \"lat\" \"long\", can provide names.","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the nearest lat/long to another lat/long — nearest","text":"","code":"nearest(   nearest_df,   to_df,   nearest_lat = \"lat\",   nearest_long = \"long\",   to_lat = \"lat\",   to_long = \"long\" )"},{"path":"https://maxcovr.njtierney.com/reference/nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the nearest lat/long to another lat/long — nearest","text":"nearest_df dataframe containing latitude longitude. to_df dataframe containing latitude longitude. nearest_lat name latitude nearest_df. nearest_long name longitude nearest_df. to_lat name latitude to_df. to_long name longitude to_df.","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the nearest lat/long to another lat/long — nearest","text":"dataframe \"to_df\" along nearest \"nearest_df\" row, along distance two, nearest_id, row position nearest_df closest row.","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the nearest lat/long to another lat/long — nearest","text":"","code":"nearest(nearest_df = york_crime,         to_df = york) #> # A tibble: 2,944 × 22 #>    to_id nearest_id distance long_to lat_to object_id desig_id pref_ref name     #>    <dbl>      <dbl>    <dbl>   <dbl>  <dbl>     <int> <chr>       <int> <chr>    #>  1     1         33    36.0    -1.09   54.0      6144 DYO1195    463280 GUILDHA… #>  2     2        183     4.30   -1.09   54.0      6143 DYO1746        NA Bootham… #>  3     3        183    35.8    -1.09   54.0      6142 DYO1373    462942 BOOTHAM… #>  4     4        183    89.1    -1.08   54.0      6141 DYO1745        NA Bootham… #>  5     5        942   236.     -1.10   53.9      6140 DYO14      325952 CHURCH … #>  6     6        942   236.     -1.10   53.9      6139 DYO14      325952 CHURCH … #>  7     7        245    60.6    -1.08   54.0      6138 DYO1226    463228 NUMBER … #>  8     8        264    60.9    -1.08   54.0      6137 DYO1226    463228 NUMBER … #>  9     9       1106    91.8    -1.08   54.0      6136 DYO421     464726 TERRY M… #> 10    10        184    23.9    -1.08   54.0      6135 DYO978     463684 NA       #> # ℹ 2,934 more rows #> # ℹ 13 more variables: grade <chr>, category <chr>, persistent_id <chr>, #> #   date <chr>, lat_nearest <dbl>, long_nearest <dbl>, street_id <chr>, #> #   street_name <chr>, context <chr>, id <chr>, location_type <chr>, #> #   location_subtype <chr>, outcome_status <chr>  # you can use the pipe as well  york_crime |> nearest(york) #> # A tibble: 2,944 × 22 #>    to_id nearest_id distance long_to lat_to object_id desig_id pref_ref name     #>    <dbl>      <dbl>    <dbl>   <dbl>  <dbl>     <int> <chr>       <int> <chr>    #>  1     1         33    36.0    -1.09   54.0      6144 DYO1195    463280 GUILDHA… #>  2     2        183     4.30   -1.09   54.0      6143 DYO1746        NA Bootham… #>  3     3        183    35.8    -1.09   54.0      6142 DYO1373    462942 BOOTHAM… #>  4     4        183    89.1    -1.08   54.0      6141 DYO1745        NA Bootham… #>  5     5        942   236.     -1.10   53.9      6140 DYO14      325952 CHURCH … #>  6     6        942   236.     -1.10   53.9      6139 DYO14      325952 CHURCH … #>  7     7        245    60.6    -1.08   54.0      6138 DYO1226    463228 NUMBER … #>  8     8        264    60.9    -1.08   54.0      6137 DYO1226    463228 NUMBER … #>  9     9       1106    91.8    -1.08   54.0      6136 DYO421     464726 TERRY M… #> 10    10        184    23.9    -1.08   54.0      6135 DYO978     463684 NA       #> # ℹ 2,934 more rows #> # ℹ 13 more variables: grade <chr>, category <chr>, persistent_id <chr>, #> #   date <chr>, lat_nearest <dbl>, long_nearest <dbl>, street_id <chr>, #> #   street_name <chr>, context <chr>, id <chr>, location_type <chr>, #> #   location_subtype <chr>, outcome_status <chr>"},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"nearest facility + distance to a user — nearest_facility_dist","title":"nearest facility + distance to a user — nearest_facility_dist","text":"nearest facility + distance user","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nearest facility + distance to a user — nearest_facility_dist","text":"","code":"nearest_facility_dist(facility, user)"},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nearest facility + distance to a user — nearest_facility_dist","text":"facility matrix longitude latitude first two columns user matrix longitude latitude first two columns","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nearest facility + distance to a user — nearest_facility_dist","text":"matrix 3 columns: user_id, facility_id, distance, user_id identifier user, facility_id identifier facility closest user, distance distance metres user facility.","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Calculate the nearest facility distances — nearest_facility_distances","title":"(Internal) Calculate the nearest facility distances — nearest_facility_distances","text":"function wrapper similarly named, nearest_facility_dist function used inside max_coverage calculate distances nearest facilities can found.","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Calculate the nearest facility distances — nearest_facility_distances","text":"","code":"nearest_facility_distances(existing_facility, user)"},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Calculate the nearest facility distances — nearest_facility_distances","text":"existing_facility dataframe existing facilities user dataframe users place facilities cover","code":""},{"path":"https://maxcovr.njtierney.com/reference/nearest_facility_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Calculate the nearest facility distances — nearest_facility_distances","text":"tibble 3 columns: user_id, facility_id, distance, user_id identifier user, facility_id identifier facility closest user, distance distance metres user facility.","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance between two locations — spherical_distance","title":"Calculate the distance between two locations — spherical_distance","text":"function uses haversine formula calculate great circle distance two locations, identified latitudes longitudes. borrowed rnoaa (https://github.com/ropenscilabs/rnoaa/blob/master/R/meteo_distance.R) included rnoaa large package rather unrelated maxcovr. renamed meteo_spherical_distance spherical_distance","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance between two locations — spherical_distance","text":"","code":"spherical_distance(lat1, long1, lat2, long2)"},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance between two locations — spherical_distance","text":"lat1 Latitude first location. long1 Longitude first location. lat2 Latitude second location. long2 Longitude second location.","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distance between two locations — spherical_distance","text":"numeric value giving distance meters pair locations.","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the distance between two locations — spherical_distance","text":"function assumes earth radius 6,371 km.","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the distance between two locations — spherical_distance","text":"Alex Simmons a2.simmons@qut.edu.au, Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance between two locations — spherical_distance","text":"","code":"spherical_distance(lat1 = -27.4667,                    long1 = 153.0217,                    lat2 = -27.4710,                    long2 = 153.0234) #> [1] 506.7013"},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distance using haversines formula — spherical_distance_cpp","title":"Calculate distance using haversines formula — spherical_distance_cpp","text":"Calculate distance using haversines formula","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distance using haversines formula — spherical_distance_cpp","text":"","code":"spherical_distance_cpp(lat1, long1, lat2, long2)"},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distance using haversines formula — spherical_distance_cpp","text":"lat1 latitude first location long1 longitude first location lat2 latitude second location long2 longitude second location","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distance using haversines formula — spherical_distance_cpp","text":"distance metres two locations","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate (vectorized) distance using haversines formula — spherical_distance_cpp_vec","title":"Calculate (vectorized) distance using haversines formula — spherical_distance_cpp_vec","text":"Calculate (vectorized) distance using haversines formula","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate (vectorized) distance using haversines formula — spherical_distance_cpp_vec","text":"","code":"spherical_distance_cpp_vec(lat1, long1, lat2, long2)"},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate (vectorized) distance using haversines formula — spherical_distance_cpp_vec","text":"lat1 latitude first location long1 longitude first location lat2 latitude second location long2 longitude second location","code":""},{"path":"https://maxcovr.njtierney.com/reference/spherical_distance_cpp_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate (vectorized) distance using haversines formula — spherical_distance_cpp_vec","text":"distance metres two locations","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise coverage — summarise_coverage","title":"Summarise coverage — summarise_coverage","text":"Provides summary information coverage, using distance dataframe created facility_user_dist().","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise coverage — summarise_coverage","text":"","code":"summarise_coverage(df_dist, distance_cutoff = 100)"},{"path":"https://maxcovr.njtierney.com/reference/summarise_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise coverage — summarise_coverage","text":"df_dist distance matrix, computed facility_user_dist(). distance_cutoff critical distance range like know metres. default 100m.","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise coverage — summarise_coverage","text":"dataframe","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_relocated_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the average distance from facilities relocated to their final place — summarise_relocated_dist","title":"Find the average distance from facilities relocated to their final place — summarise_relocated_dist","text":"takes data function augment_facility_relocated function name summarises find average sd distance two.","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_relocated_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the average distance from facilities relocated to their final place — summarise_relocated_dist","text":"","code":"summarise_relocated_dist(augment_facility_relocated)"},{"path":"https://maxcovr.njtierney.com/reference/summarise_relocated_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the average distance from facilities relocated to their final place — summarise_relocated_dist","text":"augment_facility_relocated dataframe function: augment_facility_relocated","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_relocated_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the average distance from facilities relocated to their final place — summarise_relocated_dist","text":"dataframe","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/reference/summarise_user_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the coverage for users — summarise_user_cov","title":"Summarise the coverage for users — summarise_user_cov","text":"uses user dataframe obtained something like augment_user_tested.","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_user_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the coverage for users — summarise_user_cov","text":"","code":"summarise_user_cov(user)"},{"path":"https://maxcovr.njtierney.com/reference/summarise_user_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the coverage for users — summarise_user_cov","text":"user dataframe users distances user nearest facility (distance), whether within distance threshold (is_covered).","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_user_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the coverage for users — summarise_user_cov","text":"dataframe containing information number users, number events covered, proportion events covered, distance ","code":""},{"path":"https://maxcovr.njtierney.com/reference/summarise_user_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the coverage for users — summarise_user_cov","text":"","code":"if (FALSE) { # \\dontrun{  summarise_user_cov(augmented_user_test)   } # }"},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for max_coverage cross validation — summary_mc_cv","title":"Summary for max_coverage cross validation — summary_mc_cv","text":"Summary max_coverage cross validation","code":""},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for max_coverage cross validation — summary_mc_cv","text":"","code":"summary_mc_cv(model, test_data)"},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for max_coverage cross validation — summary_mc_cv","text":"model cross validated model. test_data cross validated test data.","code":""},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for max_coverage cross validation — summary_mc_cv","text":"summary dataframe","code":""},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for max_coverage cross validation — summary_mc_cv","text":"","code":"if (FALSE) { # \\dontrun{  library(tidyverse)  york_selected <- york |> filter(grade == \"I\") york_unselected <- york |> filter(grade != \"I\")  mc_cv_fixed <- modelr::crossv_kfold(york_crime, 5) |>                  mutate(test = map(test,as_tibble),                  train = map(train,as_tibble))  mc_cv_fit <- map_df(mc_cv_fixed$train,                     ~max_coverage(existing_facility = york_selected,                     proposed_facility = york_unselected,                     user = .,                     n_added = 20,                     distance_cutoff = 100))   summary_mc_cv(mc_cv_fit,                mc_cv_fixed$test)  } # }"},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv_relocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for max_coverage cross validation for relocation models — summary_mc_cv_relocate","title":"Summary for max_coverage cross validation for relocation models — summary_mc_cv_relocate","text":"Summary max_coverage cross validation relocation models","code":""},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv_relocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for max_coverage cross validation for relocation models — summary_mc_cv_relocate","text":"","code":"summary_mc_cv_relocate(model, test_data)"},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv_relocate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for max_coverage cross validation for relocation models — summary_mc_cv_relocate","text":"model cross validated model test_data cross validated test data","code":""},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv_relocate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for max_coverage cross validation for relocation models — summary_mc_cv_relocate","text":"summary dataframe","code":""},{"path":"https://maxcovr.njtierney.com/reference/summary_mc_cv_relocate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for max_coverage cross validation for relocation models — summary_mc_cv_relocate","text":"","code":"if (FALSE) { # \\dontrun{  library(tidyverse)  york_selected <- york |> filter(grade == \"I\") york_unselected <- york |> filter(grade != \"I\")  mc_cv <- modelr::crossv_kfold(york_crime, 5) |>                  mutate(test = map(test,as_tibble),                  train = map(train,as_tibble))  mc_cv_relocate <- map_df(mc_cv$train,                     ~max_coverage_relocation(existing_facility = york_selected,                                proposed_facility = york_unselected,                                user = .,                                cost_install = 2500,                                cost_removal = 700,                                cost_total = 50000,                                distance_cutoff = 100,                                solver = \"gurobi\"))   summary_mc_cv_relocate(mc_cv_relocate, mc_cv$test)  } # }"},{"path":"https://maxcovr.njtierney.com/reference/york.html","id":null,"dir":"Reference","previous_headings":"","what":"York Listed Buildings. — york","title":"York Listed Buildings. — york","text":"Listed buildings provided City York Council, made available : https://data.gov.uk/dataset/listed-buildings24/resource/8c32fb55-0e40-457f-98f9-6494503e283b. data contains public sector information licensed Open Government Licence v3.0: https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/.","code":""},{"path":"https://maxcovr.njtierney.com/reference/york.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"York Listed Buildings. — york","text":"","code":"york"},{"path":"https://maxcovr.njtierney.com/reference/york.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"York Listed Buildings. — york","text":"data frame seven variables: long, lat, object_id, desig_id, pref_ref, name, grade. long longitude building lat latitude building object_id unique identifier building desig_id ID related feature yet known pref_ref ID related feature yet known name name building grade one three (, II, III) cateogories listed buildings details, see https://www.york.gov.uk/info/20215/conservation_and_listed_buildings/1346/listed_buildings https://data.gov.uk/dataset/listed-buildings24/resource/8c32fb55-0e40-457f-98f9-6494503e283b","code":""},{"path":"https://maxcovr.njtierney.com/reference/york_crime.html","id":null,"dir":"Reference","previous_headings":"","what":"York Crime Locations. — york_crime","title":"York Crime Locations. — york_crime","text":"Crime locations obtained via ukpolice R package: https://github.com/njtierney/ukpolice, uses data made available uk crime API:<data.police.uk/docs/>. data contains public sector information licensed Open Government Licence v3.0: https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/.","code":""},{"path":"https://maxcovr.njtierney.com/reference/york_crime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"York Crime Locations. — york_crime","text":"","code":"york_crime"},{"path":"https://maxcovr.njtierney.com/reference/york_crime.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"York Crime Locations. — york_crime","text":"data frame variables: category, persistent_id, date, lat, long, street_id, street_name, context, id, location_type, location_subtype, outcome_status. ' category: Category crime (https://data.police.uk/docs/method/crime-street/) persistent_id: 64-character unique identifier crime. (different existing 'id' attribute, guaranteed always stay crime.) date: Date crime YYYY-MM latitude: Latitude longitude: Longitude street_id: Unique identifier street street_name: Name location. approximation crime happened context: Extra information crime (applicable) id: ID crime. ID relates API, police identifier location_type: type location. Either Force BTP: Force indicates normal police force location; BTP indicates British Transport Police location. BTP locations fall within normal police force boundaries. location_subtype: BTP locations, type location crime recorded. outcome_status: category date latest recorded outcome crime","code":""},{"path":"https://maxcovr.njtierney.com/reference/york_crime.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"York Crime Locations. — york_crime","text":"documentation : https://data.police.uk/docs/method/crime-street/ details, see https://www.york.gov.uk/info/20215/conservation_and_listed_buildings/1346/listed_buildings https://data.gov.uk/dataset/listed-buildings24/resource/8c32fb55-0e40-457f-98f9-6494503e283b","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-1-3-9200","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.1.3.9200 (development version)","text":"Update use dplyr::n() instead just n().","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-1-3-9100","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.1.3.9100","text":"Changed solution vector integer, numeric, reduce space - #42","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-1-3-9000","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.1.3.9000","text":"Removed return_early argument max_coverage. Refactored solving process max_coverage","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-1-1-9300","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.1.1.9300","text":"max_coverage now consistent output solver glpk summarise_coverage now uses distance_cutoff instead dist_indic coverage now propagates distance cutoff properly now consistent output solver glpk","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-1-1-9000","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.1.1.9000","text":"Now byte compiles default (may necessary R >= 3.5) max_coverage now uses glpk default, much faster.","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"maxcovr-010-mach-in-d-minor","dir":"Changelog","previous_headings":"","what":"maxcovr 0.1.0 “Mach in D Minor”","title":"maxcovr 0.1.0 “Mach in D Minor”","text":"release created assist replicating previous journal articles used software. API maxcovr likely change .","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-5-9700","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.5.9700","text":"max_coverage_relocation now works different data, thanks bug fix. prototype solver engines added. maxcovr now works glpk, gurobi, addition lpSolve. Testing still conducted. summary function coverage added one liner take two dataframes coverage one dataframe another. Documentation tests still need work summary_mc_cv_relocate added relocation methods. eventially S3 method, think? rewrote extraction functions results max_coverage, replacing key functions. make things easier debug extend future. functions start extract_. likely updates future started work refactoring max_coverage functions work vectors, fule called maxcovr-refactor-vectors. provides efficient computation preparation matrices optimisation, provide substantial speedups larger N, multiple n_added’s needed. max_coverage now returns entire solution lpSolve, except constraints, large (can easily 1Gb)","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-0-5-9700","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.0.5.9700","text":"summary.maxcovr summary.maxcovr_relocation method now return information previous distances. Improvements made overall returning API max_coverage_relocation plays better extracting summary information.","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"bug-fixes-0-0-5-9700","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"maxcovr 0.0.5.9700","text":"Removed scraggly test dataset lurking shadows making model work.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-4-9000","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.4.9000","text":"new function, max_coverage_relocation, takes arguments total cost, installation cost, relocation costs works many facilities can place, potentially remove replace obtain optimum coverage. function currently development. future absorted max_coverage. added results extraction method max_coverage_relocation, extract_mc_result_relocation. Eventually absorbed extract_mc_result function, kind S3 method. added print summary S3 method max_coverage max_coverage_relocation, .maxcovr_relocation .maxcovr, handy testing.","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"bug-fixes-0-0-4-9000","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"maxcovr 0.0.4.9000","text":"Changed specification m_under_i m_over_i clearly reflect “gain removing AED position ” Removed scraggly test dataset lurking shadows making model work.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"under-development-0-0-3-9000","dir":"Changelog","previous_headings":"","what":"Under development","title":"maxcovr 0.0.3.9000","text":"added vignette describes perform cross validation maxcovr problem using modelr purrr maxcovr now returns tibble lists. makes easier perform tasks, consistent easier work .","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-2-9991","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.2.9991","text":"added c++ functions calculate distance matrices binary matrices added wrapper function nearest find nearest lat/long points one dataframe another calculate distance two. least 10 times faster previous method using joins dplyr. changed API max_coverage, now takes 3 dataframes, behind scenes work, cost taking slightly longer calculates matrix. Speedups definitely still available though, c++ functions yet parallelised. max_coverage now also calculates summary, can retrieved mc_model$summary.","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"bug-fixes-0-0-2-9991","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"maxcovr 0.0.2.9991","text":"fixed c++ code distance_matrix","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-0-9800","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.0.9800","text":"added summarise_coverage() function, calculates coverage based upon distance dataframe created facility_user_dist(). added york_crime data containing crime locations around city york.","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"minor-changes-0-0-0-9800","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"maxcovr 0.0.0.9800","text":"improved README include examples usage () removed artifacts relating previous work; maxcovr now works kinds data","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-0-9700","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.0.9700","text":"renamed copertura maxcovr added york listed building data, taken data.gov.uk","code":""},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"under-development-0-0-0-9700","dir":"Changelog","previous_headings":"","what":"Under development","title":"maxcovr 0.0.0.9700","text":"gurobi solver max_coverage. faster matrix methods max_coverage","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-0-9600","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.0.9600","text":"added draft cpp code spherical_distance distance_matrix updated max_coverage include extract_mc_result inside function, rather needing separate function call. save space, matrix friends can rather large, especially running coverage multiple times different conditions.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-2-9500","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.2.9500","text":"fixed bug spherical_distance return metres. assuming 100m kilometer! added parameters facility_user_distance - coverage_distance, allows specify coverage interested , nearest, specify nearest “facility” want nearest facility user, “user” want nearest user facility, NULL just want complete pairwise distances.","code":""},{"path":[]},{"path":"https://maxcovr.njtierney.com/news/index.html","id":"new-features-0-0-2-90000","dir":"Changelog","previous_headings":"","what":"New features","title":"maxcovr 0.0.2.90000","text":"Added NEWS.md file track changes package. Added helper function assist extracting results model eventually broken smaller functions, can really specific function want run get result. Ideally, function, except one runs model, return one, maybe two arguments.","code":""}]
